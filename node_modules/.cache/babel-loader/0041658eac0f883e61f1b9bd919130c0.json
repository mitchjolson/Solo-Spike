{"ast":null,"code":"import _classCallCheck from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dandleton/Assignments/code-challenge-6-sagas/src/components/AnimalForm/AnimalForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { tsThisType } from '@babel/types'; // DO NOT MODIFY THIS FILE FOR BASE MODE!\n\nvar AnimalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimalForm, _Component);\n\n  function AnimalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AnimalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AnimalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      species: '',\n      class: ''\n    };\n\n    _this.handleChangeSpecies = function (event) {\n      console.log(event.target.value, _this.state);\n\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.handleChangeClass = function (event) {\n      console.log(event.target.value, _this.state);\n\n      _this.setState({\n        description: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AnimalForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('AnimalForm did mount');\n    }\n  }, {\n    key: \"render\",\n    // Renders the list of animals\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Add An Animal\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Species\"), React.createElement(\"input\", {\n        type: \"text\",\n        onchange: function onchange(event) {\n          return _this2.handleChangeSpecies(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Class\"), React.createElement(\"input\", {\n        type: \"text\",\n        onchange: function onchange(event) {\n          return _this2.handleChangeClass(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AnimalForm;\n}(Component); // Makes our reducers available in our component\n\n\nvar mapReduxStateToProps = function mapReduxStateToProps(reduxState) {\n  return {\n    reduxState: reduxState\n  };\n};\n\nexport default connect(mapReduxStateToProps)(AnimalForm);","map":{"version":3,"sources":["/Users/dandleton/Assignments/code-challenge-6-sagas/src/components/AnimalForm/AnimalForm.js"],"names":["React","Component","connect","tsThisType","AnimalForm","state","species","class","handleChangeSpecies","event","console","log","target","value","setState","title","handleChangeClass","description","handleSubmit","mapReduxStateToProps","reduxState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;IAEMC,U;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,KAAK,EAAE;AAFH,K;;UASRC,mB,GAAsB,UAACC,KAAD,EAAW;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EAAgC,MAAKR,KAArC;;AACA,YAAKS,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEN,KAAK,CAACG,MAAN,CAAaC;AAAtB,OAAd;AACH,K;;UAEDG,iB,GAAoB,UAACP,KAAD,EAAW;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB,EAAgC,MAAKR,KAArC;;AACA,YAAKS,QAAL,CAAc;AAAEG,QAAAA,WAAW,EAAER,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,K;;;;;;;wCAZmB;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;;AAYD;6BACS;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,kBAACT,KAAD;AAAA,iBAAW,MAAI,CAACD,mBAAL,CAAyBC,KAAzB,CAAX;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,kBAACA,KAAD;AAAA,iBAAW,MAAI,CAACO,iBAAL,CAAuBP,KAAvB,CAAX;AAAA,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH;;;;EApCoBR,S,GAuCzB;;;AACA,IAAMkB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD;AAAA,SAAiB;AAC1CA,IAAAA,UAAU,EAAVA;AAD0C,GAAjB;AAAA,CAA7B;;AAIA,eAAelB,OAAO,CAACiB,oBAAD,CAAP,CAA8Bf,UAA9B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { tsThisType } from '@babel/types';\n\n// DO NOT MODIFY THIS FILE FOR BASE MODE!\n\nclass AnimalForm extends Component {\n\n    state = {\n        species: '',\n        class: '',\n    }\n\n    componentDidMount() {\n        console.log('AnimalForm did mount');\n    }\n\n    handleChangeSpecies = (event) => {\n        console.log(event.target.value, this.state);\n        this.setState({ title: event.target.value });\n    }\n\n    handleChangeClass = (event) => {\n        console.log(event.target.value, this.state);\n        this.setState({ description: event.target.value });\n    }\n\n    // Renders the list of animals\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <h4>Add An Animal</h4>\n                    <label>Species</label>\n                    <input type='text' onchange={(event) => this.handleChangeSpecies(event)} />\n                    <label>Class</label>\n                    <input type='text' onchange={(event) => this.handleChangeClass(event)} />\n                    <button type=\"submit\">Submit</button>\n                </form>\n                <br/>\n            </div>\n        );\n    }\n}\n\n// Makes our reducers available in our component\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState\n});\n\nexport default connect(mapReduxStateToProps)(AnimalForm);"]},"metadata":{},"sourceType":"module"}