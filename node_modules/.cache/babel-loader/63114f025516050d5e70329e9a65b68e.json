{"ast":null,"code":"'use strict';\n\nvar Task = require('./task'),\n    ScheduledTask = require('./scheduled-task'),\n    validation = require('./pattern-validation');\n\nmodule.exports = function () {\n  /**\n   * Creates a new task to execute given function when the cron\n   *  expression ticks.\n   *\n   * @param {string} expression - cron expression.\n   * @param {Function} func - task to be executed.\n   * @param {Object} options - a set of options for the scheduled task:\n   *    - scheduled <boolean>: if a schaduled task is ready and running to be \n   *      performed when the time mach with the cron excpression.\n   *    - timezone <string>: the tiemzone to execute the tasks.\n   * \n   *    Example: \n   *    {\n   *      \"scheduled\": true,\n   *      \"timezone\": \"America/Sao_Paulo\"\n   *    } \n   * \n   * @returns {ScheduledTask} update function.\n   */\n  function createTask(expression, func, options) {\n    // Added for immediateStart depreciation\n    if (typeof options === 'boolean') {\n      console.warn('DEPRECIATION: imediateStart is deprecated and will be removed soon in favor of the options param.');\n      options = {\n        scheduled: options\n      };\n    }\n\n    if (!options) {\n      options = {\n        scheduled: true\n      };\n    }\n\n    var task = new Task(expression, func);\n    return new ScheduledTask(task, options);\n  }\n\n  function validate(expression) {\n    try {\n      validation(expression);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return {\n    schedule: createTask,\n    validate: validate\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}