{"ast":null,"code":"import _classCallCheck from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dandleton/Assignments/code-challenge-6-sagas/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dandleton/Assignments/code-challenge-6-sagas/src/components/AnimalForm/AnimalForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // DO NOT MODIFY THIS FILE FOR BASE MODE!\n\nvar AnimalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AnimalForm, _Component);\n\n  function AnimalForm() {\n    _classCallCheck(this, AnimalForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AnimalForm).apply(this, arguments));\n  }\n\n  _createClass(AnimalForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('AnimalForm did mount');\n    } // Renders the list of animals\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Animal Form\");\n    }\n  }]);\n\n  return AnimalForm;\n}(Component); // Makes our reducers available in our component\n\n\nvar mapReduxStateToProps = function mapReduxStateToProps(reduxState) {\n  return {\n    reduxState: reduxState\n  };\n};\n\nexport default connect(mapReduxStateToProps)(AnimalForm);","map":{"version":3,"sources":["/Users/dandleton/Assignments/code-challenge-6-sagas/src/components/AnimalForm/AnimalForm.js"],"names":["React","Component","connect","AnimalForm","console","log","mapReduxStateToProps","reduxState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;IAEMC,U;;;;;;;;;;;;;wCAEkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,K,CAED;;;;6BACS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ;AAGH;;;;EAXoBJ,S,GAczB;;;AACA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD;AAAA,SAAiB;AAC1CA,IAAAA,UAAU,EAAVA;AAD0C,GAAjB;AAAA,CAA7B;;AAIA,eAAeL,OAAO,CAACI,oBAAD,CAAP,CAA8BH,UAA9B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// DO NOT MODIFY THIS FILE FOR BASE MODE!\n\nclass AnimalForm extends Component {\n\n    componentDidMount() {\n        console.log('AnimalForm did mount');\n    }\n\n    // Renders the list of animals\n    render() {\n        return (\n            <h4>Animal Form</h4>\n        );\n    }\n}\n\n// Makes our reducers available in our component\nconst mapReduxStateToProps = (reduxState) => ({\n    reduxState\n});\n\nexport default connect(mapReduxStateToProps)(AnimalForm);"]},"metadata":{},"sourceType":"module"}